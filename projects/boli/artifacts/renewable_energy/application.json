{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "configure_boli_integration(uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_energy_project(string,string,uint64,uint64,uint64,string,bool,uint64,string,string,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_funding_status(string)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "report_energy_revenue(uint64,uint64,uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_energy_project_details(uint64)string": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transfer_energy_project(uint64,address,address,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 8,
            "num_uints": 10
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asset_creator": {
                    "type": "bytes",
                    "key": "asset_creator",
                    "descr": "Address of the asset creator"
                },
                "asset_id": {
                    "type": "uint64",
                    "key": "asset_id",
                    "descr": "Asset ID of the tokenized asset"
                },
                "asset_registry_id": {
                    "type": "uint64",
                    "key": "asset_registry_id",
                    "descr": "App ID of the Asset Registry managing this asset"
                },
                "asset_type": {
                    "type": "bytes",
                    "key": "asset_type",
                    "descr": "Type of the asset (e.g., 'blue-economy', 'carbon-credit', etc.)"
                },
                "boli_allocation": {
                    "type": "uint64",
                    "key": "boli_allocation",
                    "descr": "Amount of BOLI tokens allocated to this asset"
                },
                "compliance_status": {
                    "type": "bytes",
                    "key": "compliance_status",
                    "descr": "Compliance status of the asset (e.g., 'authorized', 'suspended')"
                },
                "current_funding": {
                    "type": "uint64",
                    "key": "current_funding",
                    "descr": "Current amount of BOLI tokens funded"
                },
                "energy_type": {
                    "type": "bytes",
                    "key": "energy_type",
                    "descr": "Type of renewable energy (solar, wind, hydro, etc.)"
                },
                "estimated_annual_output": {
                    "type": "uint64",
                    "key": "estimated_annual_output",
                    "descr": "Estimated annual output in kilowatt-hours"
                },
                "geolocation": {
                    "type": "bytes",
                    "key": "geolocation",
                    "descr": "Geolocation information for the asset"
                },
                "installation_date": {
                    "type": "uint64",
                    "key": "installation_date",
                    "descr": "Installation date timestamp"
                },
                "installed_capacity": {
                    "type": "uint64",
                    "key": "installed_capacity",
                    "descr": "Installed capacity in watts"
                },
                "investment_status": {
                    "type": "bytes",
                    "key": "investment_status",
                    "descr": "Investment status (registered, funding, funded, active, completed)"
                },
                "jurisdiction_code": {
                    "type": "bytes",
                    "key": "jurisdiction_code",
                    "descr": "Jurisdiction code where the asset is located/regulated"
                },
                "last_updated": {
                    "type": "uint64",
                    "key": "last_updated",
                    "descr": "Timestamp of the last update to the asset"
                },
                "metadata": {
                    "type": "bytes",
                    "key": "metadata",
                    "descr": "IPFS hash or other metadata reference"
                },
                "project_lifespan": {
                    "type": "uint64",
                    "key": "project_lifespan",
                    "descr": "Project lifespan in seconds"
                },
                "treasury_app_id": {
                    "type": "uint64",
                    "key": "treasury_app_id",
                    "descr": "App ID of the Treasury managing the backing"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "RenewableEnergyContract",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Initialize the app - basic setup only"
            },
            {
                "name": "configure_boli_integration",
                "args": [
                    {
                        "type": "uint64",
                        "name": "asset_registry_id"
                    },
                    {
                        "type": "uint64",
                        "name": "treasury_app_id"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "Configure the contract with BOLI integration"
            },
            {
                "name": "create_energy_project",
                "args": [
                    {
                        "type": "string",
                        "name": "project_name"
                    },
                    {
                        "type": "string",
                        "name": "energy_type"
                    },
                    {
                        "type": "uint64",
                        "name": "installed_capacity"
                    },
                    {
                        "type": "uint64",
                        "name": "estimated_annual_output"
                    },
                    {
                        "type": "uint64",
                        "name": "project_lifespan"
                    },
                    {
                        "type": "string",
                        "name": "location"
                    },
                    {
                        "type": "bool",
                        "name": "fractionalize"
                    },
                    {
                        "type": "uint64",
                        "name": "fraction_count"
                    },
                    {
                        "type": "string",
                        "name": "technical_specs_hash"
                    },
                    {
                        "type": "string",
                        "name": "jurisdiction_code"
                    },
                    {
                        "type": "uint64",
                        "name": "boli_allocation"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "desc": "Creates a renewable energy infrastructure asset with BOLI token allocation"
            },
            {
                "name": "update_funding_status",
                "args": [
                    {
                        "type": "string",
                        "name": "new_status"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "Updates the project funding status"
            },
            {
                "name": "report_energy_revenue",
                "args": [
                    {
                        "type": "uint64",
                        "name": "revenue_amount"
                    },
                    {
                        "type": "uint64",
                        "name": "energy_produced"
                    },
                    {
                        "type": "uint64",
                        "name": "period_start"
                    },
                    {
                        "type": "uint64",
                        "name": "period_end"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "Reports energy production revenue for distribution to token holders"
            },
            {
                "name": "get_energy_project_details",
                "args": [
                    {
                        "type": "uint64",
                        "name": "project_asset_id"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Get detailed energy project information"
            },
            {
                "name": "transfer_energy_project",
                "args": [
                    {
                        "type": "uint64",
                        "name": "project_asset_id"
                    },
                    {
                        "type": "address",
                        "name": "from_address"
                    },
                    {
                        "type": "address",
                        "name": "to_address"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Transfer ownership of the energy project"
            }
        ],
        "networks": {},
        "desc": "Handles tokenization of renewable energy projects and their output"
    },
    "bare_call_config": {}
}