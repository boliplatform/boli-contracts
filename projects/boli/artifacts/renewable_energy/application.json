{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "create_energy_project(string,string,uint64,uint64,uint64,string,bool,uint64,string,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_energy_production_certificates(uint64,uint64,uint64,uint64,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_project_performance(uint64,uint64,uint64,string)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_energy_project_details(uint64)string": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transfer_energy_project(uint64,address,address,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 7,
            "num_uints": 6
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asset_creator": {
                    "type": "bytes",
                    "key": "asset_creator",
                    "descr": "Address of the asset creator"
                },
                "asset_id": {
                    "type": "uint64",
                    "key": "asset_id",
                    "descr": "Asset ID of the tokenized asset"
                },
                "asset_type": {
                    "type": "bytes",
                    "key": "asset_type",
                    "descr": "Type of the asset (e.g., 'blue-economy', 'carbon-credit', etc.)"
                },
                "compliance_status": {
                    "type": "bytes",
                    "key": "compliance_status",
                    "descr": "Compliance status of the asset (e.g., 'authorized', 'suspended')"
                },
                "energy_type": {
                    "type": "bytes",
                    "key": "energy_type",
                    "descr": "Type of renewable energy (solar, wind, hydro, etc.)"
                },
                "estimated_annual_output": {
                    "type": "uint64",
                    "key": "estimated_annual_output",
                    "descr": "Estimated annual output in kilowatt-hours"
                },
                "geolocation": {
                    "type": "bytes",
                    "key": "geolocation",
                    "descr": "Geolocation information for the asset"
                },
                "installation_date": {
                    "type": "uint64",
                    "key": "installation_date",
                    "descr": "Installation date timestamp"
                },
                "installed_capacity": {
                    "type": "uint64",
                    "key": "installed_capacity",
                    "descr": "Installed capacity in watts"
                },
                "jurisdiction_code": {
                    "type": "bytes",
                    "key": "jurisdiction_code",
                    "descr": "Jurisdiction code where the asset is located/regulated"
                },
                "last_updated": {
                    "type": "uint64",
                    "key": "last_updated",
                    "descr": "Timestamp of the last update to the asset"
                },
                "metadata": {
                    "type": "bytes",
                    "key": "metadata",
                    "descr": "IPFS hash or other metadata reference"
                },
                "project_lifespan": {
                    "type": "uint64",
                    "key": "project_lifespan",
                    "descr": "Project lifespan in seconds"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "RenewableEnergyContract",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Initialize the app - basic setup only"
            },
            {
                "name": "create_energy_project",
                "args": [
                    {
                        "type": "string",
                        "name": "project_name"
                    },
                    {
                        "type": "string",
                        "name": "energy_type"
                    },
                    {
                        "type": "uint64",
                        "name": "installed_capacity"
                    },
                    {
                        "type": "uint64",
                        "name": "estimated_annual_output"
                    },
                    {
                        "type": "uint64",
                        "name": "project_lifespan"
                    },
                    {
                        "type": "string",
                        "name": "location"
                    },
                    {
                        "type": "bool",
                        "name": "fractionalize"
                    },
                    {
                        "type": "uint64",
                        "name": "fraction_count"
                    },
                    {
                        "type": "string",
                        "name": "technical_specs_hash"
                    },
                    {
                        "type": "string",
                        "name": "jurisdiction_code"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "desc": "Creates a renewable energy infrastructure asset"
            },
            {
                "name": "create_energy_production_certificates",
                "args": [
                    {
                        "type": "uint64",
                        "name": "project_asset_id"
                    },
                    {
                        "type": "uint64",
                        "name": "production_period_start"
                    },
                    {
                        "type": "uint64",
                        "name": "production_period_end"
                    },
                    {
                        "type": "uint64",
                        "name": "energy_produced"
                    },
                    {
                        "type": "string",
                        "name": "meter_reading_hash"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "desc": "Creates energy production certificates (similar to RECs)"
            },
            {
                "name": "update_project_performance",
                "args": [
                    {
                        "type": "uint64",
                        "name": "project_asset_id"
                    },
                    {
                        "type": "uint64",
                        "name": "actual_output"
                    },
                    {
                        "type": "uint64",
                        "name": "performance_rating"
                    },
                    {
                        "type": "string",
                        "name": "maintenance_status"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "Updates project performance metrics"
            },
            {
                "name": "get_energy_project_details",
                "args": [
                    {
                        "type": "uint64",
                        "name": "project_asset_id"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Get detailed energy project information"
            },
            {
                "name": "transfer_energy_project",
                "args": [
                    {
                        "type": "uint64",
                        "name": "project_asset_id"
                    },
                    {
                        "type": "address",
                        "name": "from_address"
                    },
                    {
                        "type": "address",
                        "name": "to_address"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Transfer ownership of the energy project"
            }
        ],
        "networks": {},
        "desc": "Handles tokenization of renewable energy projects and their output"
    },
    "bare_call_config": {}
}