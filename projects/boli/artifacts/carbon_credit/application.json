{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "configure_boli_integration(uint64,uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "create_carbon_project(string,string,string,string,string,string,string,uint64,uint64,uint64,string,string,string,uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "update_funding_status(string)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "report_carbon_credit_revenue(uint64,uint64,string)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "issue_credits(uint64,address,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "retire_credits(uint64,uint64,string,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_verification_document(uint64,string,uint64,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_carbon_credit_details(uint64)string": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "verify_carbon_credit(uint64)bool": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "transfer_credits(uint64,address,address,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 12,
            "num_uints": 10
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asset_creator": {
                    "type": "bytes",
                    "key": "asset_creator",
                    "descr": "Address of the asset creator"
                },
                "asset_id": {
                    "type": "uint64",
                    "key": "asset_id",
                    "descr": "Asset ID of the tokenized asset"
                },
                "asset_registry_id": {
                    "type": "uint64",
                    "key": "asset_registry_id",
                    "descr": "App ID of the Asset Registry managing this asset"
                },
                "asset_type": {
                    "type": "bytes",
                    "key": "asset_type",
                    "descr": "Type of the asset (e.g., 'blue-economy', 'carbon-credit', etc.)"
                },
                "boli_allocation": {
                    "type": "uint64",
                    "key": "boli_allocation",
                    "descr": "Amount of BOLI tokens allocated to this asset"
                },
                "carbon_registry": {
                    "type": "bytes",
                    "key": "carbon_registry",
                    "descr": "Carbon registry name"
                },
                "compliance_status": {
                    "type": "bytes",
                    "key": "compliance_status",
                    "descr": "Compliance status of the asset (e.g., 'authorized', 'suspended')"
                },
                "credit_type": {
                    "type": "bytes",
                    "key": "credit_type",
                    "descr": "Type of carbon credit"
                },
                "current_funding": {
                    "type": "uint64",
                    "key": "current_funding",
                    "descr": "Current amount of BOLI tokens funded"
                },
                "geolocation": {
                    "type": "bytes",
                    "key": "geolocation",
                    "descr": "Geolocation information for the asset"
                },
                "investment_status": {
                    "type": "bytes",
                    "key": "investment_status",
                    "descr": "Investment status (registered, funding, funded, active, completed)"
                },
                "jurisdiction_code": {
                    "type": "bytes",
                    "key": "jurisdiction_code",
                    "descr": "Jurisdiction code where the asset is located/regulated"
                },
                "last_updated": {
                    "type": "uint64",
                    "key": "last_updated",
                    "descr": "Timestamp of the last update to the asset"
                },
                "metadata": {
                    "type": "bytes",
                    "key": "metadata",
                    "descr": "IPFS hash or other metadata reference"
                },
                "registry_project_id": {
                    "type": "bytes",
                    "key": "registry_project_id",
                    "descr": "Project ID in the registry"
                },
                "remaining_offset": {
                    "type": "uint64",
                    "key": "remaining_offset",
                    "descr": "Remaining carbon offset in tonnes CO2"
                },
                "total_carbon_offset": {
                    "type": "uint64",
                    "key": "total_carbon_offset",
                    "descr": "Total carbon offset in tonnes CO2"
                },
                "treasury_app_id": {
                    "type": "uint64",
                    "key": "treasury_app_id",
                    "descr": "App ID of the Treasury managing the backing"
                },
                "verification_methodology": {
                    "type": "bytes",
                    "key": "verification_methodology",
                    "descr": "Verification methodology used"
                },
                "verifier": {
                    "type": "bytes",
                    "key": "verifier",
                    "descr": "Name of the verifier"
                },
                "vintage_end": {
                    "type": "uint64",
                    "key": "vintage_end",
                    "descr": "End date of the vintage period"
                },
                "vintage_start": {
                    "type": "uint64",
                    "key": "vintage_start",
                    "descr": "Start date of the vintage period"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "CarbonCreditContract",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Initialize the app - basic setup only"
            },
            {
                "name": "configure_boli_integration",
                "args": [
                    {
                        "type": "uint64",
                        "name": "asset_registry_id"
                    },
                    {
                        "type": "uint64",
                        "name": "treasury_app_id"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "Configure the contract with BOLI integration"
            },
            {
                "name": "create_carbon_project",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "unit_name"
                    },
                    {
                        "type": "string",
                        "name": "credit_type"
                    },
                    {
                        "type": "string",
                        "name": "carbon_registry"
                    },
                    {
                        "type": "string",
                        "name": "registry_project_id"
                    },
                    {
                        "type": "string",
                        "name": "jurisdiction_code"
                    },
                    {
                        "type": "string",
                        "name": "geolocation"
                    },
                    {
                        "type": "uint64",
                        "name": "vintage_start"
                    },
                    {
                        "type": "uint64",
                        "name": "vintage_end"
                    },
                    {
                        "type": "uint64",
                        "name": "total_offset"
                    },
                    {
                        "type": "string",
                        "name": "verification_methodology"
                    },
                    {
                        "type": "string",
                        "name": "monitoring_report_hash"
                    },
                    {
                        "type": "string",
                        "name": "verifier"
                    },
                    {
                        "type": "uint64",
                        "name": "boli_allocation"
                    }
                ],
                "returns": {
                    "type": "uint64"
                },
                "desc": "Creates a new carbon credit project with BOLI allocation"
            },
            {
                "name": "update_funding_status",
                "args": [
                    {
                        "type": "string",
                        "name": "new_status"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "Updates the carbon credit project funding status"
            },
            {
                "name": "report_carbon_credit_revenue",
                "args": [
                    {
                        "type": "uint64",
                        "name": "revenue_amount"
                    },
                    {
                        "type": "uint64",
                        "name": "credit_sale_amount"
                    },
                    {
                        "type": "string",
                        "name": "buyer_type"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "Reports carbon credit sale revenue for distribution to token holders"
            },
            {
                "name": "issue_credits",
                "args": [
                    {
                        "type": "uint64",
                        "name": "credit_asset_id"
                    },
                    {
                        "type": "address",
                        "name": "recipient"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Issues carbon credits to a recipient"
            },
            {
                "name": "retire_credits",
                "args": [
                    {
                        "type": "uint64",
                        "name": "credit_asset_id"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    },
                    {
                        "type": "string",
                        "name": "retirement_beneficiary"
                    },
                    {
                        "type": "string",
                        "name": "retirement_reason"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Retires carbon credits (permanently removing them from circulation)"
            },
            {
                "name": "add_verification_document",
                "args": [
                    {
                        "type": "uint64",
                        "name": "credit_asset_id"
                    },
                    {
                        "type": "string",
                        "name": "verifier_name"
                    },
                    {
                        "type": "uint64",
                        "name": "verification_date"
                    },
                    {
                        "type": "string",
                        "name": "document_hash"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Adds verification document to existing carbon credits"
            },
            {
                "name": "get_carbon_credit_details",
                "args": [
                    {
                        "type": "uint64",
                        "name": "credit_asset_id"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Get detailed carbon credit information"
            },
            {
                "name": "verify_carbon_credit",
                "args": [
                    {
                        "type": "uint64",
                        "name": "credit_asset_id"
                    }
                ],
                "returns": {
                    "type": "bool"
                },
                "desc": "Verify the authenticity of carbon credit"
            },
            {
                "name": "transfer_credits",
                "args": [
                    {
                        "type": "uint64",
                        "name": "credit_asset_id"
                    },
                    {
                        "type": "address",
                        "name": "from_address"
                    },
                    {
                        "type": "address",
                        "name": "to_address"
                    },
                    {
                        "type": "uint64",
                        "name": "amount"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Transfer carbon credits between accounts"
            }
        ],
        "networks": {},
        "desc": "Implements the Verified Carbon Unit (VCU) Framework for climate initiatives"
    },
    "bare_call_config": {}
}